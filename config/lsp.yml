---
jsonls:
  bin: vscode-json-language-server
  install:
    npm:
      - vscode-langservers-extracted

yamlls:
  bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server
  # settings:
  #   yaml:
  #     keyOrdering: false

taplo:
  bin: taplo
  install:
    script:
      file: taplo.sh

typos_lsp:
  bin: typos-lsp
  init_options:
    diagnosticSeverity: Information
  install:
    script:
      file: typos_ls.sh

lemminx:
  bin: lemminx
  args: []
  install:
    requires:
      - htmlq
    script:
      file: lemminx.sh

contextive:
  bin: Contextive.LanguageServer_which

ast_grep:
  bin: ast-grep
  install:
    npm:
      - "@ast-grep/cli"

marksman:
  bin: marksman
  install:
    script:
      file: marksman.sh

# markdown:
#   bin: vscode-markdown-language-server
#   args:
#     - --stdio
#   filetypes:
#     - markdown
#   install:
#     npm:
#       - vscode-langservers-extracted

ltex:
  bin: ltex-ls
  install:
    script:
      file: ltex.sh

texlab:
  bin: texlab
  settings:
    texlab:
      build:
        args:
          - -X
          - compile
          - --keep-intermediates
          - --keep-logs
          - --synctex
          - --
          - "%f"
        executable: tectonic
        # onSave: True
        # forwardSearchAfter: True
      # forwardSearch:
      #   executable: evince-synctex
      #   args:
      #     - "-f"
      #     - "%l"
      #     - "%p"
      #     - '"code -g %f:%l"'
  install:
    script:
      file: texlab.sh

digestif:
  bin: digestif

diagnosticls:
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
    - zsh
  root:
    fallback: cwd
  init_options:
    filetypes:
      dockerfile:
        - hadolint
    linters:
      hadolint:
        args:
          - --format
          - json
          - --
          - "%file"
        command: hadolint
        parseJson:
          column: column
          line: line
          message: "${message} [${code}]"
          security: level
        rootPatterns:
          - .hadolint.yml
          - .hadolint.yaml
        securities:
          error: error
          info: info
          style: hint
          warning: warning
        sourceName: hadolint
  install:
    npm:
      - diagnostic-languageserver

bashls:
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

jqls:
  bin: jq-lsp
  install:
    requires:
      - go
    script:
      file: jq_ls.go

# awk_ls:
#   bin: awk-language-server
#   install:
#     npm:
#       - awk-language-server

powershell_es:
  bin: pwsh_es.ps1
  args: []
  install:
    requires:
      - pwsh
    script:
      file: pwsh_es.dl.ps1

dockerls:
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

docker_compose_language_service:
  bin: docker-compose-langserver
  install:
    npm:
      - "@microsoft/compose-language-service"

pyright:
  bin: pyright-langserver
  install:
    npm:
      - pyright

# pylyzer:
#   bin: pylyzer
#   install:
#     pip:
#       - pylyzer
#
# ruff_lsp:
#   bin: ruff
#   install:
#     pip:
#       - ruff-lsp

hls:
  bin: haskell-language-server-wrapper
  install:
    requires:
      - jq
      - runhaskell
    script:
      file: hls.dl.hs

rust_analyzer:
  bin: rust-analyzer
  install:
    requires:
      - rustc
    script:
      file: rust_analyzer.rs

gopls:
  bin: gopls
  install:
    requires:
      - go
    script:
      file: gopls.go

golangci_lint_ls:
  bin: golangci-lint-langserver
  install:
    requires:
      - go
    script:
      file: golangci.go

sourcekit:
  bin: sourcekit-lsp

clangd:
  bin: clangd

ccls:
  bin: ccls

fortls:
  bin: fortls
  install:
    pip:
      - fortls

# typeprof:
#   bin: typeprof

# ruby_lsp:
#   bin: ruby-lsp
#   install:
#     gem:
#       - ruby-lsp

solargraph:
  bin: solargraph
  install:
    gem:
      - solargraph
    requires:
      - ruby
    script:
      file: solargraph.dl.rb

# mdx_analyzer:
#   bin: mdx-language-server
#   install:
#     npm:
#       - "@mdx-js/language-server"

tsserver:
  bin: typescript-language-server
  install:
    npm:
      - "@types/node"
      - typescript
      - typescript-language-server

prismals:
  bin: prisma-language-server
  install:
    npm:
      - "@prisma/language-server"

eslint:
  bin: vscode-eslint-language-server
  settings:
    run: onSave
    rulesCustomizations:
      - rule: "*"
        severity: downgrade
      - rule: prettier/*
        severity: off
  install:
    npm:
      - vscode-langservers-extracted

# denols:
#   bin: deno

html:
  bin: vscode-html-language-server
  install:
    npm:
      - vscode-langservers-extracted

cssls:
  bin: vscode-css-language-server
  install:
    npm:
      - vscode-langservers-extracted

tailwindcss:
  bin: tailwindcss-language-server
  install:
    npm:
      - "@tailwindcss/language-server"

svelte:
  bin: svelteserver
  install:
    npm:
      - svelte-language-server

graphql:
  bin: graphql-lsp
  install:
    npm:
      - graphql-language-service-cli

vimls:
  bin: vim-language-server
  install:
    npm:
      - vim-language-server

r_language_server:
  bin: lsr
  args: []
  install:
    requires:
      - Rscript
      - R
    script:
      file: lsr.dl.r

julials:
  bin: julia-lsp
  args: []
  install:
    requires:
      - julia
    script:
      file: julia_ls.dl.jl

phpactor:
  bin: phpactor
  install:
    requires:
      - php
    script:
      file: phpactor.dl.php

intelephense:
  bin: intelephense
  install:
    npm:
      - intelephense

fsautocomplete:
  bin: fsautocomplete
  install:
    requires:
      - dotnet
    script:
      file: fsautocomplete.dl.fsx

omnisharp:
  bin: omnisharp
  args: []
  install:
    requires:
      - dotnet
    script:
      file: omnisharp.dl.fsx

clojure_lsp:
  bin: clojure-lsp
  install:
    requires:
      - clojure
    script:
      file: clj_lsp.clj

# gradle_ls:
#   bin: gradle-language-server
#   install:
#     requires:
#       - gradle
#       - java
#     script:
#       file: gradle_ls.java

kotlin_language_server:
  bin: kotlin-language-server
  install:
    requires:
      - kotlinc
    script:
      file: kotlin_ls.kts

jdtls:
  bin: jdtls
  install:
    requires:
      # - TODO
      - java
    script:
      file: jdtls.java

# prolog_ls:
#   bin: prolog-ls
#   args: []
#   install:
#     requires:
#       - swipl
#     script:
#       file: prolog_ls.dl.pro

sqlls:
  bin: sql-language-server
  install:
    npm:
      - sql-language-server

lua_ls:
  bin: lua-language-server
  settings:
    Lua:
      runtime:
        version: "Lua 5.1"
  install:
    requires:
      - jq
    script:
      file: lua_ls.dl.sh

ansiblels:
  bin: ansible-language-server
  install:
    npm:
      - ansible-language-server

glsl_analyzer:
  bin: glsl_analyzer
  install:
    script:
      file: glsl_analyzer.sh

# theme_check:
#   bin: theme-check-language-server
#   install:
#     gem:
#       - theme-check

# emmet_language_server:
#   bin: emmet-language-server
#   install:
#     npm:
#       - "@olrtg/emmet-language-server"

terraformls:
  bin: terraform-ls
  install:
    requires:
      - jq
    script:
      file: terraform_ls.sh

tflint:
  bin: tflint
  install:
    script:
      file: tflint.sh

cobol_ls:
  bin: cobol-language-support
  args:
    - pipeEnabled
    - '-Dline.separator=\r\n'
    - -Dlogback.statusListenerClass=ch.qos.logback.core.status.NopStatusListener
    - -DserverType=NATIVE
  install:
    requires:
      - jq
      - cobc
    script:
      file: cobol_ls.cob

tabby_ml:
  bin: tabby-agent
  install:
    npm:
      - tabby-agent
codeium:
  bin: codeium
  install:
    script:
      file: codeium.sh
# volar:
#   bin: vue-language-server
#   install:
#     npm:
#       - "@volar/vue-language-server"
