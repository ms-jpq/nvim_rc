---
- server: diagnosticls
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - python
    - ruby
    - sh
    - zsh
  root:
    fallback: cwd

  init_options:
    linters:
      shellcheck:
        sourceName: shellcheck
        command: shellcheck
        args:
          - --format=json
          - --exclude=SC1090
          - "-"
        rootPatterns:
          - .shellcheckrc
          - shellcheckrc
        parseJson:
          column: column
          endColumn: endColumn
          endLine: endLine
          line: line
          message: ${message} [${code}]
          security: level
        securities:
          error: error
          info: info
          style: hint
          warning: warning
      hadolint:
        sourceName: hadolint
        command: hadolint
        args:
          - --format
          - json
          - --
          - "%file"
        rootPatterns:
          - .hadolint.yml
          - .hadolint.yaml
        parseJson:
          line: line
          column: column
          security: level
          message: "${message} [${code}]"
        securities:
          error: error
          warning: warning
          info: info
          style: hint
      mypy:
        sourceName: mypy
        command: mypy
        args:
          - --no-color-output
          - --no-error-summary
          - --show-column-numbers
          - --follow-imports=silent
          - --
          - "%file"
        formatPattern:
          - '^.*:(\d+?):(\d+?): ([a-z]+?): (.*)$'
          - column: 2
            line: 1
            message: 4
            security: 3
        securities:
          error: error
      rubocop:
        sourceName: rubocop
        command: rubocop
        args:
          - --format
          - json
          - --force-exclusion
          - --stdin
          - "%filepath"
        debounce: 100
        parseJson:
          column: location.start_column
          endColumn: location.end_column
          endLine: location.last_line
          errorsRoot: files[0].offenses
          line: location.start_line
          message: "[${cop_name}] ${message}"
          security: severity
        securities:
          convention: info
          error: error
          fatal: error
          info: info
          refactor: info
          warning: warning

    filetypes:
      # sh: &sh
      #   - shellcheck
      # zsh: *sh
      dockerfile:
        - hadolint
      # python:
      #   - mypy
      ruby:
        - rubocop

  install:
    npm:
      - diagnostic-languageserver

- server: jsonls
  bin: vscode-json-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: yamlls
  bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server

- server: taplo
  bin: taplo
  install:
    script:
      env:
        MAC_URI: https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-x86_64-apple-darwin-gnu.tar.gz
        LINUX_URI: https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-x86_64-unknown-linux-gnu.tar.gz
      file: dl/taplo.sh

- server: lemminx
  bin: lemminx
  args: []
  install:
    script:
      env:
        MAC_URI: https://download.jboss.org/jbosstools/vscode/stable/lemminx-binary/0.19.1-541/lemminx-osx-x86_64.zip
        LINUX_URI: https://download.jboss.org/jbosstools/vscode/stable/lemminx-binary/0.19.1-541/lemminx-linux.zip
      file: dl/lemminx.sh

- server: texlab
  bin: texlab
  settings:
    texlab:
      build:
        executable: tectonic
        args:
          - --keep-logs
          - --keep-intermediates
          - --synctex
          - --
          - "%f"
        # onSave: True
        # forwardSearchAfter: True
      # forwardSearch:
      #   executable: evince-synctex
      #   args:
      #     - "-f"
      #     - "%l"
      #     - "%p"
      #     - '"code -g %f:%l"'

  install:
    script:
      env:
        MAC_URI: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-macos.tar.gz
        LINUX_URI: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-linux.tar.gz
        T_MAC_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.11.0/tectonic-0.11.0-x86_64-apple-darwin.tar.gz
        T_LINUX_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.11.0/tectonic-0.11.0-x86_64-unknown-linux-gnu.tar.gz
      file: dl/texlab.sh

- server: ltex
  bin: ltex-ls
  install:
    script:
      env:
        MAC_URI: https://github.com/valentjn/ltex-ls/releases/latest/download/ltex-ls-15.2.0-mac-x64.tar.gz
        LINUX_URI: https://github.com/valentjn/ltex-ls/releases/latest/download/ltex-ls-15.2.0-linux-x64.tar.gz
      file: dl/ltex.sh

- server: bashls
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

- server: awk_ls
  bin: awk-language-server
  install:
    npm:
      - awk-language-server

- server: powershell_es
  bin: powershell-ls
  args: []
  install:
    script:
      required:
        - pwsh
      env:
        URI: https://github.com/PowerShell/PowerShellEditorServices/releases/latest/download/PowerShellEditorServices.zip
      file: dl/powershell_ls.sh

- server: dockerls
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

- server: pyright
  bin: pyright-langserver
  install:
    npm:
      - pyright

- server: hls
  bin: haskell-language-server-wrapper
  install:
    script:
      env:
        MAC_URI: https://downloads.haskell.org/~hls/haskell-language-server-1.8.0.0/haskell-language-server-1.8.0.0-aarch64-darwin.tar.xz
        LINUX_URI: https://downloads.haskell.org/~hls/haskell-language-server-1.8.0.0/haskell-language-server-1.8.0.0-x86_64-linux-deb10.tar.xz
      file: dl/haskell-language-server.sh

- server: rust_analyzer
  bin: rust-analyzer
  install:
    script:
      env:
        MAC_URI: https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-aarch64-apple-darwin.gz
        LINUX_URI: https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz
      file: dl/rust_analyzer.sh

- server: clangd
  bin: clangd

- server: gopls
  bin: gopls
  install:
    go:
      - golang.org/x/tools/gopls@latest

- server: sourcekit
  bin: sourcekit-lsp

- server: clangd
  bin: clangd

- server: ccls
  bin: ccls

# - server: typeprof
#   bin: typeprof

- server: solargraph
  bin: solargraph
  install:
    gem:
      - solargraph

- server: tsserver
  bin: typescript-language-server
  install:
    npm:
      - typescript
      - typescript-language-server

- server: eslint
  bin: vscode-eslint-language-server
  install:
    npm:
      - vscode-langservers-extracted

# - server: denols
#   bin: deno

- server: html
  bin: vscode-html-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: cssls
  bin: vscode-css-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: tailwindcss
  bin: tailwindcss-language-server
  install:
    npm:
      - "@tailwindcss/language-server"

- server: graphql
  bin: graphql-lsp
  install:
    npm:
      - graphql-language-service-cli

- server: vimls
  bin: vim-language-server
  install:
    npm:
      - vim-language-server

- server: r_language_server
  bin: R
  install:
    script:
      required:
        - Rscript
        - R
      file: dl/rlang_server.r

- server: julials
  bin: julia-lsp
  args: []
  install:
    script:
      required:
        - julia
      file: dl/julia-ls.sh

- server: intelephense
  bin: intelephense
  install:
    npm:
      - intelephense

- server: fsautocomplete
  bin: fsautocomplete
  install:
    script:
      required:
        - dotnet
      file: dl/fsharp-ls.sh

- server: omnisharp
  bin: omnisharp
  args: []
  install:
    script:
      required:
        - dotnet
      env:
        MAC_URI: https://github.com/OmniSharp/omnisharp-roslyn/releases/latest/download/omnisharp-osx-arm64-net6.0.tar.gz
        LINUX_URI: https://github.com/OmniSharp/omnisharp-roslyn/releases/latest/download/omnisharp-linux-x64-net6.0.tar.gz
      file: dl/omnisharp.sh

- server: jdtls
  bin: jdt-ls
  args: []
  install:
    script:
      required:
        - java
      env:
        PREFIX: http://download.eclipse.org/jdtls/snapshots/
        URI: http://download.eclipse.org/jdtls/snapshots/latest.txt
      file: dl/jdtls.sh

- server: kotlin_language_server
  bin: kotlin-language-server
  install:
    script:
      required:
        - java
        - gradle
      env:
        URI: https://github.com/fwcd/kotlin-language-server/releases/latest/download/server.zip
      file: dl/kotlin.sh

- server: sqlls
  bin: sql-language-server
  args:
    - up
    - --method
    - stdio
  install:
    npm:
      - sql-language-server

- server: sumneko_lua
  bin: lua-language-server
  settings:
    Lua:
      runtime:
        version: "Lua 5.1"
  install:
    script:
      required:
        - git
        - python3
        - gcc
      env:
        URI: https://github.com/sumneko/lua-language-server
        TAG: "3.5.3"
      file: dl/sumneko_lua.sh

- server: ansiblels
  bin: ansible-language-server
  install:
    npm:
      - ansible-language-server
# - server: pylsp
#   bin: pylsp
#   install:
#     pip:
#       - python-lsp-server[all]

# - server: rome
#   bin: rome
#   install:
#     npm:
#       - rome

# - server: volar
#   bin: vue-language-server
#   install:
#     npm:
#       - "@volar/vue-language-server"
