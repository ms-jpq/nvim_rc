---
- server: jsonls
  bin: vscode-json-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: yamlls
  bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server
  # settings:
  #   yaml:
  #     keyOrdering: false

- server: taplo
  bin: taplo
  install:
    script:
      file: taplo.sh

- server: typos_lsp
  bin: typos-lsp
  init_options:
    diagnosticSeverity: Information
  install:
    script:
      file: typos_ls.sh

- server: lemminx
  bin: lemminx
  args: []
  install:
    requires:
      - htmlq
    script:
      file: lemminx.sh

- server: contextive
  bin: Contextive.LanguageServer_which

- server: ast_grep
  bin: ast-grep
  install:
    npm:
      - "@ast-grep/cli"

- server: marksman
  bin: marksman
  install:
    script:
      file: marksman.sh

# - server: markdown
#   bin: vscode-markdown-language-server
#   args:
#     - --stdio
#   filetypes:
#     - markdown
#   install:
#     npm:
#       - vscode-langservers-extracted

- server: ltex
  bin: ltex-ls
  install:
    script:
      file: ltex.sh

- server: texlab
  bin: texlab
  settings:
    texlab:
      build:
        args:
          - -X
          - compile
          - --keep-intermediates
          - --keep-logs
          - --synctex
          - --
          - "%f"
        executable: tectonic
        # onSave: True
        # forwardSearchAfter: True
      # forwardSearch:
      #   executable: evince-synctex
      #   args:
      #     - "-f"
      #     - "%l"
      #     - "%p"
      #     - '"code -g %f:%l"'
  install:
    script:
      file: texlab.sh

- server: digestif
  bin: digestif

- server: diagnosticls
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
    - zsh
  root:
    fallback: cwd
  init_options:
    filetypes:
      dockerfile:
        - hadolint
    linters:
      hadolint:
        args:
          - --format
          - json
          - --
          - "%file"
        command: hadolint
        parseJson:
          column: column
          line: line
          message: "${message} [${code}]"
          security: level
        rootPatterns:
          - .hadolint.yml
          - .hadolint.yaml
        securities:
          error: error
          info: info
          style: hint
          warning: warning
        sourceName: hadolint
  install:
    npm:
      - diagnostic-languageserver

- server: bashls
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

- server: jqls
  bin: jq-lsp
  install:
    requires:
      - go
    script:
      file: jq_ls.go

# - server: awk_ls
#   bin: awk-language-server
#   install:
#     npm:
#       - awk-language-server

- server: powershell_es
  bin: pwsh_es.ps1
  args: []
  install:
    requires:
      - pwsh
    script:
      file: pwsh_es.dl.ps1

- server: dockerls
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

- server: docker_compose_language_service
  bin: docker-compose-langserver
  install:
    npm:
      - "@microsoft/compose-language-service"

- server: pyright
  bin: pyright-langserver
  install:
    npm:
      - pyright

# - server: pylyzer
#   bin: pylyzer
#   install:
#     pip:
#       - pylyzer

# - server: ruff_lsp
#   bin: ruff
#   install:
#     pip:
#       - ruff-lsp

- server: hls
  bin: haskell-language-server-wrapper
  install:
    requires:
      - jq
      - runhaskell
    script:
      file: hls.dl.hs

- server: rust_analyzer
  bin: rust-analyzer
  install:
    requires:
      - rustc
    script:
      file: rust_analyzer.rs

- server: gopls
  bin: gopls
  install:
    requires:
      - go
    script:
      file: gopls.go

- server: golangci_lint_ls
  bin: golangci-lint-langserver
  install:
    requires:
      - go
    script:
      file: golangci.go

- server: sourcekit
  bin: sourcekit-lsp

- server: clangd
  bin: clangd

- server: ccls
  bin: ccls

- server: fortls
  bin: fortls
  install:
    pip:
      - fortls

# - server: typeprof
#   bin: typeprof

# - server: ruby_ls
#   bin: ruby-lsp
#   install:
#     gem:
#       - ruby-lsp

- server: solargraph
  bin: solargraph
  install:
    gem:
      - solargraph
    requires:
      - ruby
    script:
      file: solargraph.dl.rb

- server: mdx_analyzer
  bin: mdx-language-server
  install:
    npm:
      - "@mdx-js/language-server"

- server: tsserver
  bin: typescript-language-server
  install:
    npm:
      - "@types/node"
      - typescript
      - typescript-language-server

- server: prismals
  bin: prisma-language-server
  install:
    npm:
      - "@prisma/language-server"

- server: eslint
  bin: vscode-eslint-language-server
  settings:
    rulesCustomizations:
      - rule: "*"
        severity: downgrade
      - rule: unused-imports/*
        severity: info
      - rule: prettier/*
        severity: info
  install:
    npm:
      - vscode-langservers-extracted

# - server: denols
#   bin: deno

- server: html
  bin: vscode-html-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: cssls
  bin: vscode-css-language-server
  install:
    npm:
      - vscode-langservers-extracted

# - server: tailwindcss
#   bin: tailwindcss-language-server
#   install:
#     npm:
#       - "@tailwindcss/language-server"

- server: svelte
  bin: svelteserver
  install:
    npm:
      - svelte-language-server

- server: graphql
  bin: graphql-lsp
  install:
    npm:
      - graphql-language-service-cli

- server: vimls
  bin: vim-language-server
  install:
    npm:
      - vim-language-server

- server: r_language_server
  bin: lsr
  args: []
  install:
    requires:
      - Rscript
      - R
    script:
      file: lsr.dl.r

- server: julials
  bin: julia-lsp
  args: []
  install:
    requires:
      - julia
    script:
      file: julia_ls.dl.jl

- server: phpactor
  bin: phpactor
  install:
    requires:
      - php
    script:
      file: phpactor.dl.php

- server: intelephense
  bin: intelephense
  install:
    npm:
      - intelephense

- server: fsautocomplete
  bin: fsautocomplete
  install:
    requires:
      - dotnet
    script:
      file: fsautocomplete.dl.fsx

- server: omnisharp
  bin: omnisharp
  args: []
  install:
    requires:
      - dotnet
    script:
      file: omnisharp.dl.fsx

- server: clojure_lsp
  bin: clojure-lsp
  install:
    requires:
      - clojure
    script:
      file: clj_lsp.clj

- server: kotlin_language_server
  bin: kotlin-language-server
  install:
    requires:
      - kotlinc
    script:
      file: kotlin_ls.kts

- server: jdtls
  bin: jdtls
  install:
    requires:
      # - TODO
      - java
    script:
      file: jdtls.java

# - server: prolog_ls
#   bin: prolog-ls
#   args: []
#   install:
#     requires:
#       - swipl
#     script:
#       file: prolog_ls.dl.pro

- server: sqlls
  bin: sql-language-server
  install:
    npm:
      - sql-language-server

- server: lua_ls
  bin: lua-language-server
  settings:
    Lua:
      runtime:
        version: "Lua 5.1"
  install:
    requires:
      - jq
    script:
      file: lua_ls.dl.sh

- server: ansiblels
  bin: ansible-language-server
  install:
    npm:
      - ansible-language-server

- server: glsl_analyzer
  bin: glsl_analyzer
  install:
    script:
      file: glsl_analyzer.sh

# - server: theme_check
#   bin: theme-check-language-server
#   install:
#     gem:
#       - theme-check

# - server: emmet_language_server
#   bin: emmet-language-server
#   install:
#     npm:
#       - "@olrtg/emmet-language-server"

- server: terraformls
  bin: terraform-ls
  install:
    requires:
      - htmlq
    script:
      file: terraform_ls.sh

- server: tflint
  bin: tflint
  install:
    script:
      file: tflint.sh

- server: cobol_ls
  bin: cobol-language-support
  args:
    - pipeEnabled
    - '-Dline.separator=\r\n'
    - -Dlogback.statusListenerClass=ch.qos.logback.core.status.NopStatusListener
    - -DserverType=NATIVE
  install:
    requires:
      - jq
      - cobc
    script:
      file: cobol_ls.cob
# - server: volar
#   bin: vue-language-server
#   install:
#     npm:
#       - "@volar/vue-language-server"
