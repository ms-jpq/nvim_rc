---
- server: diagnosticls
  bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
    - zsh
    - python
  root:
    fallback: cwd

  init_options:
    linters:
      shellcheck:
        sourceName: shellcheck
        command: shellcheck
        args:
          - --format=json
          - --exclude=SC1090
          - "-"
        rootPatterns:
          - .shellcheckrc
          - shellcheckrc
        parseJson:
          column: column
          endColumn: endColumn
          endLine: endLine
          line: line
          message: ${message} [${code}]
          security: level
        securities:
          error: error
          info: info
          style: hint
          warning: warning
      mypy:
        sourceName: mypy
        command: mypy
        args:
          - --no-error-summary
          - --show-column-numbers
          # - --follow-imports=silent
          - --
          - "%file"
        formatPattern:
          - "^.*:(\\d+?):(\\d+?): ([a-z]+?): (.*)$"
          - line: 1
            column: 2
            security: 3
            message: 4
        securities:
          error: error

    filetypes:
      sh: &sh
        - shellcheck
      zsh: *sh
      python:
        - mypy

  install:
    npm:
      - diagnostic-languageserver

- server: jsonls
  bin: vscode-json-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: yamlls
  bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server

- server: lemminx
  bin: lemminx
  args: []
  install:
    script:
      env:
        MAC_URI: https://download.jboss.org/jbosstools/vscode/stable/lemminx-binary/0.18.2-467/lemminx-osx-x86_64.zip
        LINUX_URI: https://download.jboss.org/jbosstools/vscode/stable/lemminx-binary/0.18.2-467/lemminx-linux.zip
      file: dl/lemminx.sh

- server: texlab
  bin: texlab
  filetypes:
    - tex
    - plaintex
  settings:
    latex:
      build:
        executable: tectonic
        args:
          - --keep-logs
          - --keep-intermediates
          - --outdir
          - build
          - --
          - "%f"
        outputDirectory: build
        onSave: True

  install:
    script:
      env:
        MAC_URI: https://github.com/latex-lsp/texlab/releases/download/v3.3.1/texlab-x86_64-macos.tar.gz
        LINUX_URI: https://github.com/latex-lsp/texlab/releases/download/v3.3.1/texlab-x86_64-linux.tar.gz
        T_MAC_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.8.0/tectonic-0.8.0-x86_64-apple-darwin.tar.gz
        T_LINUX_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.8.0/tectonic-0.8.0-x86_64-unknown-linux-gnu.tar.gz
      file: dl/texlab.sh

- server: bashls
  bin: bash-language-server
  install:
    npm:
      - bash-language-server

- server: dockerls
  bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs

- server: pyright
  bin: pyright-langserver
  install:
    npm:
      - pyright

- server: rust_analyzer
  bin: rust-analyzer
  install:
    script:
      env:
        MAC_URI: https://github.com/rust-analyzer/rust-analyzer/releases/download/2021-12-27/rust-analyzer-aarch64-apple-darwin.gz
        LINUX_URI: https://github.com/rust-analyzer/rust-analyzer/releases/download/2021-12-27/rust-analyzer-x86_64-unknown-linux-gnu.gz
      file: dl/rust_analyzer.sh

- server: gopls
  bin: gopls
  install:
    go:
      - golang.org/x/tools/gopls@latest

- server: sourcekit
  bin: sourcekit-lsp

- server: clangd
  bin: clangd

- server: ccls
  bin: ccls

- server: solargraph
  bin: solargraph
  install:
    gem:
      - solargraph

# - server: sorbet
#   bin: srb
#   install:
#     gem:
#       - sorbet
#       - sorbet-runtime

- server: tsserver
  bin: typescript-language-server
  install:
    npm:
      - typescript
      - typescript-language-server

- server: html
  bin: vscode-html-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: cssls
  bin: vscode-css-language-server
  install:
    npm:
      - vscode-langservers-extracted

- server: tailwindcss
  bin: tailwindcss-language-server
  install:
    script:
      required:
        - git
      env:
        URI: https://github.com/tailwindlabs/tailwindcss-intellisense/releases/download/v0.7.4/vscode-tailwindcss-0.7.4.vsix
      file: dl/tailwind.sh

- server: graphql
  bin: graphql-lsp
  install:
    npm:
      - graphql-language-service-cli

- server: vimls
  bin: vim-language-server
  install:
    npm:
      - vim-language-server

- server: r_language_server
  bin: R
  install:
    script:
      required:
        - Rscript
        - R
      file: dl/rlang_server.r

- server: intelephense
  bin: intelephense
  install:
    npm:
      - intelephense

- server: fsautocomplete
  bin: fsharp-ls
  args: []
  install:
    script:
      required:
        - dotnet
      file: dl/fs_autocomp.sh

- server: jdtls
  bin: jdt-ls
  args: []
  install:
    script:
      required:
        - java
      env:
        PREFIX: http://download.eclipse.org/jdtls/snapshots/
        URI: http://download.eclipse.org/jdtls/snapshots/latest.txt
      file: dl/jdtls.sh

- server: kotlin_language_server
  bin: kotlin-language-server
  install:
    script:
      required:
        - java
        - gradle
      env:
        URI: https://github.com/fwcd/kotlin-language-server/releases/download/1.2.0/server.zip
      file: dl/kotlin.sh

# - server: remark_ls
#   bin: remark-language-server
#   install:
#     npm:
#       - remark-language-server
# - server: sumneko_lua
#   bin: lua-ls
#   args: []
#   install:
#     script:
#       required:
#         - git
#         - python3
#       env:
#         URI: https://github.com/sumneko/lua-language-server
#         TAG: "2.3.6"
#       file: dl/sumneko_lua.sh

# - server: pylsp
#   bin: pylsp
#   install:
#     pip:
#       - python-lsp-server[all]

# - server: sqlls
#   bin: sql-language-server
#   args:
#     - up
#     - --method
#     - stdio
#   install:
#     npm:
#       - sql-language-server

# - server: rome
#   bin: rome
#   install:
#     npm:
#       - rome

# - server: ansiblels
#   bin: ansible-language-server
#   install:
#     npm:
#       - ansible-language-server
