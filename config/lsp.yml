---
- bin: vscode-json-language-server
  install:
    npm:
      - vscode-langservers-extracted
  server: jsonls

- bin: yaml-language-server
  filetypes:
    - yaml
    - yaml.ansible
    - yaml.docker-compose
  install:
    npm:
      - yaml-language-server
  server: yamlls

- bin: taplo
  install:
    script:
      env:
        DARWIN_URI: https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-darwin-aarch64.gz
        LINUX_URI: https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-linux-x86_64.gz
        NT_URI: https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-windows-x86_64.zip
      file: dl/taplo.sh
  server: taplo

- args: []
  bin: lemminx
  install:
    script:
      env:
        BASE_URI: https://download.jboss.org/jbosstools/vscode/stable/lemminx-binary
        DARWIN: lemminx-osx-x86_64.zip
        LINUX: lemminx-linux.zip
        NT: lemminx-win32.zip
      file: dl/lemminx.sh
      required:
        - htmlq
  server: lemminx

- args:
    - --stdio
  bin: vscode-markdown-language-server
  filetypes:
    - markdown
  install:
    npm:
      - vscode-langservers-extracted
  server: markdown

- bin: docker-compose-langserver
  install:
    npm:
      - "@microsoft/compose-language-service"
  server: docker_compose_language_service

- bin: ltex-ls
  install:
    script:
      env:
        DARWIN_URI: https://github.com/valentjn/ltex-ls/releases/latest/download/ltex-ls-16.0.0-mac-x64.tar.gz
        LINUX_URI: https://github.com/valentjn/ltex-ls/releases/latest/download/ltex-ls-16.0.0-linux-x64.tar.gz
        NT_URI: https://github.com/valentjn/ltex-ls/releases/latest/download/ltex-ls-16.0.0-windows-x64.zip
      file: dl/ltex.sh
  server: ltex

- bin: texlab
  install:
    script:
      env:
        DARWIN_URI: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-macos.tar.gz
        LINUX_URI: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-linux.tar.gz
        NT_URI: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-windows.zip

        T_DARWIN_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.12.0/tectonic-0.12.0-x86_64-apple-darwin.tar.gz
        T_LINUX_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.12.0/tectonic-0.12.0-x86_64-unknown-linux-gnu.tar.gz
        T_NT_URI: https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%400.12.0/tectonic-0.12.0-x86_64-pc-windows-msvc.zip
      file: dl/texlab.sh
  server: texlab
  settings:
    texlab:
      build:
        args:
          - --keep-logs
          - --keep-intermediates
          - --synctex
          - --
          - "%f"
        executable: tectonic
        # onSave: True
        # forwardSearchAfter: True
      # forwardSearch:
      #   executable: evince-synctex
      #   args:
      #     - "-f"
      #     - "%l"
      #     - "%p"
      #     - '"code -g %f:%l"'

- bin: diagnostic-languageserver
  filetypes:
    - dockerfile
    - sh
    - zsh
  init_options:
    filetypes:
      dockerfile:
        - hadolint
    linters:
      hadolint:
        args:
          - --format
          - json
          - --
          - "%file"
        command: hadolint
        parseJson:
          column: column
          line: line
          message: "${message} [${code}]"
          security: level
        rootPatterns:
          - .hadolint.yml
          - .hadolint.yaml
        securities:
          error: error
          info: info
          style: hint
          warning: warning
        sourceName: hadolint
  install:
    npm:
      - diagnostic-languageserver
  root:
    fallback: cwd
  server: diagnosticls

- bin: bash-language-server
  install:
    npm:
      - bash-language-server
  server: bashls

- bin: awk-language-server
  install:
    npm:
      - awk-language-server
  server: awk_ls

- args: []
  bin: pwsh_es.ps1
  install:
    script:
      env:
        URI: https://github.com/PowerShell/PowerShellEditorServices/releases/latest/download/PowerShellEditorServices.zip
      file: dl/pwsh_es.ps1
      required:
        - pwsh
  server: powershell_es

- bin: docker-langserver
  install:
    npm:
      - dockerfile-language-server-nodejs
  server: dockerls

- bin: pyright-langserver
  install:
    npm:
      - pyright
  server: pyright

- bin: haskell-language-server-wrapper
  install:
    script:
      env:
        DARWIN_URI: https://downloads.haskell.org/~hls/haskell-language-server-1.9.0.0/haskell-language-server-1.9.0.0-aarch64-darwin.tar.xz
        LINUX_URI: https://downloads.haskell.org/~hls/haskell-language-server-1.9.0.0/haskell-language-server-1.9.0.0-x86_64-linux-deb10.tar.xz
        NT_URI: https://downloads.haskell.org/~hls/haskell-language-server-1.9.0.0/haskell-language-server-1.9.0.0-x86_64-windows.zip
      file: dl/haskell_language_server.sh
  server: hls

- bin: rust-analyzer
  install:
    script:
      env:
        DARWIN_URI: https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-aarch64-apple-darwin.gz
        LINUX_URI: https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz
        NT_URI: https://github.com/rust-lang/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-pc-windows-msvc.gz
      file: dl/rust_analyzer.rs
      required:
        - rustc
  server: rust_analyzer

- bin: clangd
  server: clangd

- bin: gopls
  install:
    go:
      - golang.org/x/tools/gopls@latest
  server: gopls

- bin: sourcekit-lsp
  server: sourcekit

- bin: clangd
  server: clangd

- bin: ccls
  server: ccls

# - server: typeprof
#   bin: typeprof

# - server: ruby_ls
#   bin: ruby-lsp
#   install:
#     gem:
#       - ruby-lsp

- bin: solargraph
  install:
    gem:
      - solargraph
    script:
      env:
        INSTALL: t
      file: dl/solargraph.rb
  server: solargraph

- bin: typescript-language-server
  install:
    npm:
      - typescript
      - typescript-language-server
  server: tsserver

- bin: vscode-eslint-language-server
  install:
    npm:
      - vscode-langservers-extracted
  server: eslint

# - server: denols
#   bin: deno

- bin: vscode-html-language-server
  install:
    npm:
      - vscode-langservers-extracted
  server: html

- bin: vscode-css-language-server
  install:
    npm:
      - vscode-langservers-extracted
  server: cssls

- bin: tailwindcss-language-server
  install:
    npm:
      - "@tailwindcss/language-server"
  server: tailwindcss

- bin: graphql-lsp
  install:
    npm:
      - graphql-language-service-cli
  server: graphql

- bin: vim-language-server
  install:
    npm:
      - vim-language-server
  server: vimls

- bin: R
  install:
    script:
      file: dl/rlang_server.r
      required:
        - Rscript
        - R
  server: r_language_server

- args: []
  bin: julia-lsp
  install:
    script:
      file: dl/julia_ls.jl
      required:
        - julia
  server: julials

- bin: intelephense
  install:
    npm:
      - intelephense
  server: intelephense

- bin: fsautocomplete
  install:
    script:
      env:
        URI: https://github.com/ionide/Ionide-vim.git
      file: dl/fsharp_ls.fsx
      required:
        - dotnet
  server: fsautocomplete

- args: []
  bin: omnisharp
  install:
    script:
      env:
        DARWIN_URI: https://github.com/OmniSharp/omnisharp-roslyn/releases/latest/download/omnisharp-osx-arm64-net6.0.tar.gz
        LINUX_URI: https://github.com/OmniSharp/omnisharp-roslyn/releases/latest/download/omnisharp-linux-x64-net6.0.tar.gz
        NT_URI: https://github.com/OmniSharp/omnisharp-roslyn/releases/latest/download/omnisharp-win-x64-net6.0.zip
      file: dl/omnisharp.fsx
      required:
        - dotnet
  server: omnisharp

- bin: jdtls
  install:
    script:
      env:
        URI: https://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz
      file: dl/jdtls.sh
      required:
        - jshell
  server: jdtls

- bin: kotlin-language-server
  install:
    script:
      env:
        URI: https://github.com/fwcd/kotlin-language-server/releases/latest/download/server.zip
      file: dl/kotlin.kts
      required:
        - kotlinc
  server: kotlin_language_server

- args: []
  bin: prolog-ls
  install:
    script:
      env:
        URI: https://raw.githubusercontent.com/adimit/prolog.vim/master/syntax/prolog.vim
      file: dl/prolog_ls.pro
      required:
        - swipl
  server: prolog_ls

- args:
    - up
    - --method
    - stdio
  bin: sql-language-server
  install:
    npm:
      - sql-language-server
  server: sqlls

- bin: lua-language-server
  install:
    script:
      env:
        TAG: "3.6.11"
        URI: https://github.com/LuaLS/lua-language-server
      file: dl/sumneko_lua.sh
      required:
        - git
        - python3
        - gcc
  server: lua_ls
  settings:
    Lua:
      runtime:
        version: "Lua 5.1"

- bin: ansible-language-server
  install:
    npm:
      - ansible-language-server
  server: ansiblels

- bin: glslls
  install:
    script:
      env:
        URI: https://github.com/svenstaro/glsl-language-server
      file: dl/glsl_ls.sh
      required:
        - cmake
        - git
        - python3
  server: glslls

- bin: theme-check-language-server
  install:
    gem:
      - theme-check
  server: theme_check

- bin: emmet-ls
  filetypes:
    - css
    - html
    - liquid
    - scss
  install:
    npm:
      - emmet-ls
  server: emmet_ls
# - server: volar
#   bin: vue-language-server
#   install:
#     npm:
#       - "@volar/vue-language-server"
