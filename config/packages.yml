---
- git:
    call:
      - nvim
      - --headless
      - -u
      - NONE
      - +packadd nvim-treesitter
      - +TSInstallSync all
      - +TSUpdateSync
      - +quitall
    uri: https://github.com/nvim-treesitter/nvim-treesitter
  lua: |-
    require("nvim-treesitter.configs").setup(vim.g.ts_opts)
  vals:
    ts_opts:
      ensure_installed: all
      highlight:
        enable: True
      incremental_selection:
        enable: True
        keymaps:
          init_selection: w
          node_decremental: q
          node_incremental: w
      indent:
        enable: true
      textobjects:
        select:
          enable: True
          keymaps:
            aa: "@parameter.outer"
            ab: "@block.outer"
            ac: "@conditional.outer"
            aC: "@class.outer"
            af: "@function.outer"
            aF: "@call.outer"
            aL: "@loop.outer"
            as: "@statement.outer"
            ia: "@parameter.inner"
            ib: "@block.inner"
            ic: "@conditional.inner"
            iC: "@class.inner"
            if: "@function.inner"
            iF: "@call.inner"
            iL: "@loop.inner"
            is: "@statement.outer"

- git:
    uri: https://github.com/nvim-treesitter/nvim-treesitter-textobjects

- git:
    uri: https://github.com/neovim/nvim-lspconfig

- git:
    call:
      - python3
      - -m
      - chadtree
      - deps
      - --nvim
    uri: https://github.com/ms-jpq/chadtree
  # vals:
  #   chadtree_settings:
  #     theme.icon_glyph_set: ascii_hollow
  keys:
    - maps:
        "<leader>v": "<cmd>CHADopen<cr>"
      modes: n

- git:
    call:
      - python3
      - -m
      - coq
      - deps
    uri: https://github.com/ms-jpq/coq_nvim
  keys:
    - maps:
        "<leader>z": "<cmd>COQnow<cr>"
      modes: n
  lua: |-
    if vim.env.SSH_TTY or vim.env.T9 then
      local cs = vim.g.coq_settings
      cs["clients.tabnine.enabled"] = true
      vim.g.coq_settings = cs
    end
  vals:
    coq_settings:
      auto_start: True
      clients.snippets.user_path: |-
        ~/.config/nvim/pack/modules/start/snips
      keymap:
        eval_snips: "<leader>j"
        repeat: "<leader>."

- git:
    uri: https://github.com/ms-jpq/coq.thirdparty
  lua: |-
    require("coq_3p")(vim.g.COQ3p)
  vals:
    COQ3p:
      - short_name: nLUA
        src: nvimlua

      # - src: builtin/ada
      # - src: builtin/c
      # - src: builtin/clojure
      # - src: builtin/css
      # - src: builtin/haskell
      # - src: builtin/html
      # - src: builtin/js
      # - src: builtin/php
      # - src: builtin/xml

      - accept_key: <c-f>
        short_name: COP
        src: copilot
      - src: repl
      - short_name: MATH
        src: bc
      - short_name: BIG
        src: figlet
        trigger: "!big"
      - src: cow
        trigger: "!cow"
      # - src: vimtex
      #   short_name: vTEX

- git:
    uri: https://github.com/ms-jpq/snips

- git:
    uri: https://github.com/ms-jpq/coq.artifacts

- git:
    uri: https://github.com/github/copilot.vim

- git:
    uri: https://github.com/junegunn/fzf

- git:
    uri: https://github.com/junegunn/fzf.vim
  keys:
    - maps:
        "<leader>m": "<cmd>Marks<cr>"
        "<leader>o": "<cmd>BLines<cr>"
        "<leader>p": "<cmd>Buffers<cr>"
        "<leader>P": "<cmd>Files<cr>"
      modes: n
    - maps:
        "<leader>O": ":Rg "
      modes: n
      opts:
        silent: False
  lua: |-
    local fzf_opts = vim.env.FZF_DEFAULT_OPTS or ""
    local new_opts = fzf_opts .. " --no-border"
    vim.env.FZF_DEFAULT_OPTS = new_opts
  vals:
    fzf_buffers_jump: True
    fzf_layout:
      window:
        height: 0.9
        width: 0.9
    fzf_preview_window: right:wrap

- git:
    uri: https://github.com/EdenEast/nightfox.nvim
  lua: |-
    vim.schedule(function() 
      vim.cmd [[highlight Normal   guibg=NONE ctermbg=NONE]]
      vim.cmd [[highlight NormalNC guibg=NONE ctermbg=NONE]]
    end)
    vim.cmd [[colorscheme dayfox]]

- git:
    uri: https://github.com/tpope/vim-repeat

- git:
    uri: https://github.com/tpope/vim-surround

- git:
    uri: https://github.com/junegunn/vim-easy-align
  keys:
    - maps:
        "ga": "<plug>(EasyAlign)"
      modes: nv
      opts:
        noremap: False

- git:
    uri: https://github.com/tpope/vim-unimpaired

- git:
    uri: https://github.com/lewis6991/gitsigns.nvim
  lua: |-
    require('gitsigns').setup(git_opts)
  vals:
    git_opts:
      word_diff: True
# - git:
#     uri: https://github.com/lervag/vimtex
#   vals:
#     vimtex_compiler_method: tectonic
#     vimtex_view_enabled: false
