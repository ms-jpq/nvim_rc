---
- git:
    uri: https://github.com/nvim-treesitter/nvim-treesitter
    call:
      - nvim
      - --headless
      - -u
      - NONE
      - +packadd nvim-treesitter
      - +TSUpdateSync
      - +quitall
  vals:
    ts_opts:
      highlight:
        enable: True
      textobjects:
        select:
          enable: True
          keymaps:
            is: "@statement.outer"
            as: "@statement.outer"

            ib: "@block.inner"
            ab: "@block.outer"

            ia: "@parameter.inner"
            aa: "@parameter.outer"

            ic: "@conditional.inner"
            ac: "@conditional.outer"

            iC: "@class.inner"
            aC: "@class.outer"

            if: "@function.inner"
            af: "@function.outer"

            iF: "@call.inner"
            aF: "@call.outer"

            iL: "@loop.inner"
            aL: "@loop.outer"

  lua: |-
    require("nvim-treesitter.configs").setup(vim.g.ts_opts)

- git:
    uri: https://github.com/nvim-treesitter/nvim-treesitter-textobjects

- git:
    uri: https://github.com/neovim/nvim-lspconfig

- git:
    uri: https://github.com/ms-jpq/chadtree
    call:
      - python3
      - -m
      - chadtree
      - deps
      - --nvim
  # vals:
  #   chadtree_settings:
  #     theme.icon_glyph_set: ascii_hollow
  keys:
    - modes: n
      maps:
        "<leader>v": "<cmd>CHADopen<cr>"

- git:
    uri: https://github.com/ms-jpq/coq_nvim
    call:
      - python3
      - -m
      - coq
      - deps
  vals:
    coq_settings:
      auto_start: True
      clients.snippets.user_path: "~/.config/snips/"
      clients.tabnine.enabled: true
      keymap:
        repeat: "<leader>."
        eval_snips: "<leader>j"
  keys:
    - modes: n
      maps:
        "<leader>z": "<cmd>COQnow<cr>"

- git:
    uri: https://github.com/ms-jpq/coq.thirdparty
  vals:
    COQ3p:
      - src: nvimlua
        short_name: nLUA

      - src: builtin/ada
      - src: builtin/c
      - src: builtin/clojure
      - src: builtin/css
      - src: builtin/haskell
      - src: builtin/html
      - src: builtin/js
      - src: builtin/php
      - src: builtin/xml

      - src: repl
      - src: bc
        short_name: MATH
      - src: figlet
        short_name: BIG
        trigger: "!big"
      - src: cow
        trigger: "!cow"
      - src: vimtex
        short_name: vTEX
  lua: |-
    require("coq_3p")(vim.g.COQ3p)

- git:
    uri: https://github.com/ms-jpq/coq.artifacts

- git:
    uri: https://github.com/junegunn/fzf

- git:
    uri: https://github.com/junegunn/fzf.vim
  vals:
    fzf_buffers_jump: True
    fzf_preview_window: right:wrap
    fzf_layout:
      window:
        width: 0.9
        height: 0.9
  keys:
    - modes: n
      maps:
        "<leader>o": "<cmd>BLines<cr>"
        "<leader>p": "<cmd>Buffers<cr>"
        "<leader>P": "<cmd>Files<cr>"
        "<leader>m": "<cmd>Marks<cr>"
    - modes: n
      opts:
        silent: False
      maps:
        "<leader>O": ":Rg "
  lua: |-
    local fzf_opts = vim.env.FZF_DEFAULT_OPTS
    local new_opts = (fzf_opts or "") .. " --no-border"
    vim.env.FZF_DEFAULT_OPTS = new_opts

- git:
    uri: https://github.com/rakr/vim-one
  lua: |-
    vim.cmd [[colorscheme one]]
    vim.opt.background = "light"

- git:
    uri: https://github.com/tpope/vim-repeat

- git:
    uri: https://github.com/tpope/vim-surround

- git:
    uri: https://github.com/junegunn/vim-easy-align
  keys:
    - modes: nv
      opts:
        noremap: False
      maps:
        "ga": "<plug>(EasyAlign)"

- git:
    uri: https://github.com/tpope/vim-unimpaired

- git:
    uri: https://github.com/lewis6991/gitsigns.nvim
  vals:
    git_opts:
      word_diff: True
  lua: |-
    require('gitsigns').setup(git_opts)

- git:
    uri: https://github.com/lervag/vimtex
  vals:
    vimtex_compiler_method: tectonic
    vimtex_view_enabled: false

- git:
    uri: https://github.com/norcalli/nvim-colorizer.lua
  lua: |-
    local go, colourizer = pcall(require, "colorizer")
    if go then
      colourizer.setup()
    end

# - git:
#     uri: https://github.com/kosayoda/nvim-lightbulb
#   viml: |-
#     autocmd CursorHold,CursorHoldI * lua require'nvim-lightbulb'.update_lightbulb()
#
